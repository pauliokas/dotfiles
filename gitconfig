[user]
	name = Paulius Kigas
	email = pk@platform-lunar.com

[push]
	default = simple

[alias]
	f = fetch --tags
	
	branch-name = "!git rev-parse --abbrev-ref HEAD"

	diffc = diff --cached
	
	publish = "!git push --set-upstream origin `git branch-name`"
	
	co = checkout
	st = status
	br = branch
	rmb = "!f() { git branch -D \"$1\" ; git push origin --delete \"$1\" ; } ; f"

	cm = "!f() { BR=`git branch-name` && MSG=\"$1\" && (if [[ $BR =~ ^[A-Z]+-[0-9]+$ ]]; then MSG=\"$BR -- $MSG\"; fi); git commit -m \"$MSG\"; } ; f"

	ls = log --pretty=format:"%C(yellow)%h%C(red)%d\\ %C(reset)%s%C(blue)\\ [%an]" --decorate
	ll = log --pretty=format:"%C(yellow)%h%C(red)%d\\ %C(reset)%s%C(blue)\\ [%an]" --decorate --numstat
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%C(red)%d\\ %C(reset)%s%C(blue)\\ [%an]" --decorate --date=relative
	le = log --oneline --decorate

	filelog = log -u
	
	sshow = "!f() { git stash show stash^{/$@} --patch ; } ; f"
	sapply = "!f() { git stash apply stash^{/$@} ; } ; f"
	ssave = "!f() { git stash save \"$@\" ; } ; f"

	refresh = "!f() { git fetch && git rebase origin/master ; } ; f"

	cleanup = "!f() { git fetch --prune && \
			(EDITOR=$(git config core.editor) || EDITOR=vi) && \
			BRANCHES=$(mktemp /tmp/merged-branches.XXXXXX) && \
			git branch --merged=master \
				| grep -v '^\\*' \
				| grep -v 'master' >$BRANCHES && \
			$EDITOR $BRANCHES && \
			xargs git branch -d <$BRANCHES; \
			rm -f $BRANCHES; \
			} ; f"

[core]
	editor = vim

[init]
	templatedir = ~/.gittemplate

